{{- if .Values.global.Contour.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: net-contour-controller
  labels:
    networking.knative.dev/ingress-provider: contour
  {{- include "knative-serving.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.netContourController.replicas }}
  selector:
    matchLabels:
      app: net-contour-controller
    {{- include "knative-serving.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: net-contour-controller
        app.kubernetes.io/component: net-contour
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.3.0
      {{- include "knative-serving.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/net-contour
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        {{- if semverCompare "<1.21-0" .Capabilities.KubeVersion.Version }}
        - name: KUBERNETES_MIN_VERSION
          value: {{ .Capabilities.KubeVersion }}
        {{- end }}
        {{- with .Values.netContourController.controller.image }}
        image: {{ .repository }}:{{ .tag }}
        {{- end }}
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources: {{- toYaml .Values.netContourController.controller.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
{{- end }}